package com.jd.seed.exercise.algorithm.other;

import org.junit.Test;

/**
 * <pre>
 * 
 * 
 * </pre>
 * 
 * @author mecarlen 2019年3月21日 下午5:35:41
 */
public class RoundBulbOpenTest {

	@Test
	public void press() {
		int length = 100;
		boolean[] bulbs = RoundBulbOpen.initBulbsRoundState(length);
		RoundBulbOpen.print(bulbs);
		System.out.println("------------------------------------------------------------");
		RoundBulbOpen.press(bulbs);
		RoundBulbOpen.print(bulbs);
	}

	@Test
	public void numberReverse() {
		long number = 1234567890L;
		System.out.println(reverseNumber(number));
	}

	public long reverseNumber(long number) {
		String numStr = String.valueOf(number);
		char[] reverseStrChars = new char[numStr.length()];
		for (int i = 0; i < numStr.length() / 2; i++) {
			reverseStrChars[i] = numStr.charAt(numStr.length() - (i + 1));
			reverseStrChars[numStr.length() - (i + 1)] = numStr.charAt(i);
		}
		if (0 != numStr.length() % 2) {
			reverseStrChars[numStr.length() / 2] = numStr.charAt(numStr.length() / 2);
		}
		String reverseStr = String.valueOf(reverseStrChars);
		return Long.valueOf(reverseStr);
	}
	
	@Test
	public void upperAndLowerReverse() {
		System.out.println(reverseUpperAndLower('z'));
	}
	
	public char reverseUpperAndLower(char chr) {
		int ascVal = Integer.valueOf(chr);
		if(ascVal<65||ascVal>122||ascVal>90&&ascVal<97) {
			return chr;
		}
		if(ascVal>90) {
			return (char)(ascVal-32);
		} else {
			return (char)(ascVal+32);
		}
	}

}
